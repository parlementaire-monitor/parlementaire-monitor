name: Docker

on:
  release:
    types: [ published ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:

    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: 20
        
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4
      
    - name: Build FatJar with Gradle
      run: ./gradlew buildFatJar

    - name: Upload FatJar Build Artifact
      uses: actions/upload-artifact@v4.6.2
      with:
        name: parlementaire-monitor-all-${{ github.ref_name }}.jar
        path: build/libs/ParlementaireMonitor-all.jar

  docker:
    runs-on: ubuntu-latest
    needs: build

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    
    steps:

    - name: Download a Build Artifact
      uses: actions/download-artifact@v4.3.0
      with:
        name: parlementaire-monitor-all-${{ github.ref_name }}.jar

    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: LS
      run: ls && ls "$GITHUB_WORKSPACE" && ls "$GITHUB_WORKSPACE/parlementaire-monitor-all-${{ github.ref_name }}.jar"

    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        
    - name: Generate artifact attestation
      uses: actions/attest-build-provenance@v2
      with:
        subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
        subject-digest: ${{ steps.push.outputs.digest }}
        push-to-registry: true
